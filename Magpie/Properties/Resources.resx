<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="BuiltInScaleModels" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Assets\BuiltInScaleModels.json;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="Cpp_WinRT" xml:space="preserve">
    <value>C++ / WinRT</value>
  </data>
  <data name="EasyHook" xml:space="preserve">
    <value>EasyHook</value>
  </data>
  <data name="Licenses" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Assets\Licenses.txt;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;gb2312</value>
  </data>
  <data name="Logo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Assets\Logo.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Magpie_和它使用的开源软件的许可" xml:space="preserve">
    <value>The liceses that Magpie Uses:</value>
  </data>
  <data name="Magpie_开源许可" xml:space="preserve">
    <value>Magpie Open Source Licenses</value>
  </data>
  <data name="Magpie_移植的所有优秀着色器项目" xml:space="preserve">
    <value>All shader projects supported by Magpie</value>
  </data>
  <data name="Magpie_选项" xml:space="preserve">
    <value>Magpie Options</value>
  </data>
  <data name="Visual_Studio" xml:space="preserve">
    <value>Visual Studio</value>
  </data>
  <data name="不注入" xml:space="preserve">
    <value>No Injection</value>
  </data>
  <data name="关于" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="反馈" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="启动时注入" xml:space="preserve">
    <value>Injection at Startup</value>
  </data>
  <data name="如果源窗口失去焦点_则在它重获焦点时恢复全屏" xml:space="preserve">
    <value>Restore full screen when source window loses focus</value>
  </data>
  <data name="应用程序" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="开机启动" xml:space="preserve">
    <value>Run at Startup</value>
  </data>
  <data name="开机启动时最小化到系统托盘" xml:space="preserve">
    <value>Minimise to the System Tray at Startup</value>
  </data>
  <data name="开源许可" xml:space="preserve">
    <value>Open Source Licenses</value>
  </data>
  <data name="当前窗口" xml:space="preserve">
    <value>Current Window</value>
  </data>
  <data name="所有为Magpie提供反馈与贡献的人" xml:space="preserve">
    <value>All those who have provided feedback and contributions to Magpie</value>
  </data>
  <data name="打开缩放配置" xml:space="preserve">
    <value>Open Scale configuration file</value>
  </data>
  <data name="抓取模式" xml:space="preserve">
    <value>Capture Mode</value>
  </data>
  <data name="支持" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="日志级别" xml:space="preserve">
    <value>Logging Level</value>
  </data>
  <data name="显示帧率" xml:space="preserve">
    <value>Show Frame Rate</value>
  </data>
  <data name="热键" xml:space="preserve">
    <value>Hotkey</value>
  </data>
  <data name="版本" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="确定" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="秒后缩放" xml:space="preserve">
    <value>Zoom in after 5s</value>
  </data>
  <data name="缩放" xml:space="preserve">
    <value>Zoom</value>
  </data>
  <data name="缩放时调整光标速度" xml:space="preserve">
    <value>Adjust cursor scale while zoomed</value>
  </data>
  <data name="缩放模式" xml:space="preserve">
    <value>Scaling Mode</value>
  </data>
  <data name="解析失败" xml:space="preserve">
    <value>Parse Failure</value>
  </data>
  <data name="语言" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="运行时注入" xml:space="preserve">
    <value>Runtime Injection</value>
  </data>
  <data name="进程注入" xml:space="preserve">
    <value>Injection Mode</value>
  </data>
  <data name="选项" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="项目地址" xml:space="preserve">
    <value>Project URL</value>
  </data>
  <data name="高级" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="鸣谢" xml:space="preserve">
    <value>Thanks</value>
  </data>
</root>