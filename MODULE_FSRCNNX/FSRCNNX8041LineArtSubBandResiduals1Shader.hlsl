// (FSRCNNX_x2_8-0-4-1_LA) sub-band residuals 1


#define MAGPIE_INPUT_COUNT 3
#define MAGPIE_NO_CHECK
#include "common.hlsli"


D2D_PS_ENTRY(main) {
	InitMagpieSampleInput();

	float4 res = { 0.0313877351582050,-0.0325053185224533,-0.0413495972752571,0.0357267409563065 };
	res += mul(uncompressTan(SampleInputCur(0)), float4x4(0.1461677402257919, -0.1208343803882599, 0.0125428512692451, -0.1319324076175690, -0.3387282788753510, -0.3393035829067230, -0.2043240815401077, 0.0048940703272820, -0.0343158058822155, 0.0995195582509041, -0.0571033284068108, -0.0356303341686726, 0.1097832918167114, 0.1462953090667725, 0.0575199872255325, -0.1682354062795639));
	res += mul(uncompressTan(SampleInputCur(1)), float4x4(0.1110563054680824, 0.0068465564399958, -0.0098551185801625, -0.1380221396684647, -0.3268660008907318, -0.2625139057636261, 0.5479852557182312, -0.0188483651727438, -0.7557058334350586, -0.6716431379318237, 0.0680231377482414, 1.0786534547805786, -0.0519768036901951, -0.0483648441731930, 0.1052823588252068, 0.0570317767560482));
	res += uncompressLinear(SampleInputCur(2), -1, 1.5);
	res = max(res, ZEROS4) + float4(0.9962985515594482, 0.9851159453392029, 0.2272046357393265, -0.1116774082183838) * min(res, ZEROS4);

	return compressTan(res);
}
