// (FSRCNNX_x2_8-0-4-1_LA) sub-band residuals 2


#define MAGPIE_INPUT_COUNT 3
#define MAGPIE_NO_CHECK
#include "common.hlsli"


D2D_PS_ENTRY(main) {
	InitMagpieSampleInput();

	float4 res = { -0.0820835754275322,-0.0049459170550108,-0.1635029017925262,0.0367167443037033 };
	res += mul(uncompressTan(SampleInputCur(0)), float4x4(-0.1730685681104660, -0.1758024245500565, -0.0673282966017723, -0.7883995175361633, -0.0092403469607234, 0.1237237676978111, -0.0802010595798492, 0.1532886922359467, -0.0256615914404392, 0.0783618539571762, -0.0216845069080591, 0.4360575079917908, 0.2488089799880981, -0.0421040952205658, 0.4070311486721039, 0.1112201139330864));
	res += mul(uncompressTan(SampleInputCur(1)), float4x4(-0.1360913068056107, -0.0307455379515886, -0.1545475125312805, -0.0465389303863049, -0.1308580189943314, 0.2625028789043427, -0.2567890584468842, 0.3363034725189209, 0.1148972064256668, 0.3114618360996246, -0.1600875705480576, 0.6157666444778442, 0.0422471873462200, 0.0509155690670013, -1.1255714893341064, 0.0219085998833179));
	res += uncompressLinear(SampleInputCur(2), -1, 1);
	res = max(res, ZEROS4) + float4(-0.3776825070381165, 1.2568452358245850, 0.3147132694721222, 1.0953333377838135) * min(res, ZEROS4);

	return compressLinear(res, -4, 4);
}
